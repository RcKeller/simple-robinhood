{"ast":null,"code":"var _jsxFileName = \"/Users/maxyuan/Documents/simple-robinhood/client/src/pages/History.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState, useEffect, useCallback } from \"react\";\nimport styles from \"./History.module.css\";\nimport common_styles from \"./common.module.css\";\nimport { Row, Spinner } from \"react-bootstrap\";\nimport { Link, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Chart from \"react-apexcharts\";\nimport { chart_options } from \"../Constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst History = _ref => {\n  _s();\n  let {\n    stocks\n  } = _ref;\n  // Get ticker from url\n  const {\n    ticker\n  } = useParams();\n  // List of historical prices\n  const [history, setHistory] = useState([]);\n  // Get the index of the current ticker in the stocks list\n  const index = useMemo(() => {\n    for (let i = 0; i < stocks.length; i++) {\n      if (stocks[i][0] === ticker) return i;\n    }\n    return -1;\n  }, [stocks, ticker]);\n\n  // Function to fetch historical data from api\n  const getHistory = useCallback(() => {\n    axios.get(`${process.env.REACT_APP_BACKEND_URL}stocks/history/${ticker}`).then(response => {\n      setHistory(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [ticker]);\n\n  // On component mount...\n  useEffect(() => {\n    // Fetch historical data initially\n    getHistory();\n    // Repeatedly fetch every minute\n    const interval = setInterval(getHistory, 60000);\n    return () => {\n      // Stop fetching on component unmount\n      clearInterval(interval);\n    };\n  }, [ticker, getHistory]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: common_styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: common_styles.link,\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.back_btn,\n        children: \"\\u2190 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"m-0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), !stocks.length ?\n    /*#__PURE__*/\n    // Stocks haven't been fetched yet. User must have refreshed on this page\n    // So render spinner\n    _jsxDEV(\"div\", {\n      className: common_styles.spinner_container,\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        className: \"m-auto\",\n        animation: \"border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : index >= 0 ?\n    /*#__PURE__*/\n    // Valid ticker\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: styles.ticker + \" mx-auto justify-content-center\",\n        children: ticker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: styles.price + \" mx-auto justify-content-center\",\n        style: {\n          color: stocks[index][2]\n        },\n        children: index !== -1 ? stocks[index][1].toFixed(2) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(Chart, {\n          options: chart_options,\n          series: [{\n            name: ticker,\n            data: history\n          }],\n          type: \"line\",\n          height: 350,\n          width: 600\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) :\n    /*#__PURE__*/\n    // User entered an invalid ticker into url\n    _jsxDEV(\"div\", {\n      children: \"Invalid Ticker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(History, \"6rimE0Nfuz0i/jaQcLnoIfRQ68E=\", false, function () {\n  return [useParams];\n});\n_c = History;\nexport default History;\nvar _c;\n$RefreshReg$(_c, \"History\");","map":{"version":3,"names":["React","useMemo","useState","useEffect","useCallback","styles","common_styles","Row","Spinner","Link","useParams","axios","Chart","chart_options","jsxDEV","_jsxDEV","Fragment","_Fragment","History","_ref","_s","stocks","ticker","history","setHistory","index","i","length","getHistory","get","process","env","REACT_APP_BACKEND_URL","then","response","data","catch","error","console","log","interval","setInterval","clearInterval","className","container","children","link","to","back_btn","fileName","_jsxFileName","lineNumber","columnNumber","spinner_container","animation","price","style","color","toFixed","options","series","name","type","height","width","_c","$RefreshReg$"],"sources":["/Users/maxyuan/Documents/simple-robinhood/client/src/pages/History.js"],"sourcesContent":["import React, { useMemo, useState, useEffect, useCallback } from \"react\";\nimport styles from \"./History.module.css\";\nimport common_styles from \"./common.module.css\";\n\nimport { Row, Spinner } from \"react-bootstrap\";\nimport { Link, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Chart from \"react-apexcharts\";\nimport { chart_options } from \"../Constants\";\n\nconst History = ({ stocks }) => {\n  // Get ticker from url\n  const { ticker } = useParams();\n  // List of historical prices\n  const [history, setHistory] = useState([]);\n  // Get the index of the current ticker in the stocks list\n  const index = useMemo(() => {\n    for (let i = 0; i < stocks.length; i++) {\n      if (stocks[i][0] === ticker) return i;\n    }\n    return -1;\n  }, [stocks, ticker]);\n\n  // Function to fetch historical data from api\n  const getHistory = useCallback(() => {\n    axios\n      .get(`${process.env.REACT_APP_BACKEND_URL}stocks/history/${ticker}`)\n      .then((response) => {\n        setHistory(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [ticker]);\n\n  // On component mount...\n  useEffect(() => {\n    // Fetch historical data initially\n    getHistory();\n    // Repeatedly fetch every minute\n    const interval = setInterval(getHistory, 60000);\n\n    return () => {\n      // Stop fetching on component unmount\n      clearInterval(interval);\n    };\n  }, [ticker, getHistory]);\n\n  return (\n    <div className={common_styles.container}>\n      <Link className={common_styles.link} to=\"/\">\n        <span className={styles.back_btn}>‚Üê Back</span>\n      </Link>\n      <hr className=\"m-0\" />\n      {!stocks.length ? (\n        // Stocks haven't been fetched yet. User must have refreshed on this page\n        // So render spinner\n        <div className={common_styles.spinner_container}>\n          <Spinner className=\"m-auto\" animation=\"border\" />\n        </div>\n      ) : index >= 0 ? (\n        // Valid ticker\n        <>\n          {/* Stock Ticker */}\n          <Row className={styles.ticker + \" mx-auto justify-content-center\"}>\n            {ticker}\n          </Row>\n          {/* Stock Price */}\n          <Row\n            className={styles.price + \" mx-auto justify-content-center\"}\n            style={{\n              color: stocks[index][2],\n            }}\n          >\n            {index !== -1 ? stocks[index][1].toFixed(2) : \"\"}\n          </Row>\n          {/* Stock History */}\n          <Row className=\"mx-auto\">\n            <Chart\n              options={chart_options}\n              series={[\n                {\n                  name: ticker,\n                  data: history,\n                },\n              ]}\n              type=\"line\"\n              height={350}\n              width={600}\n            />\n          </Row>\n        </>\n      ) : (\n        // User entered an invalid ticker into url\n        <div>Invalid Ticker</div>\n      )}\n    </div>\n  );\n};\n\nexport default History;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxE,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,aAAa,MAAM,qBAAqB;AAE/C,SAASC,GAAG,EAAEC,OAAO,QAAQ,iBAAiB;AAC9C,SAASC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,kBAAkB;AACpC,SAASC,aAAa,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,OAAO,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAF,IAAA;EACzB;EACA,MAAM;IAAEG;EAAO,CAAC,GAAGZ,SAAS,EAAE;EAC9B;EACA,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC1C;EACA,MAAMuB,KAAK,GAAGxB,OAAO,CAAC,MAAM;IAC1B,KAAK,IAAIyB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,MAAM,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;MACtC,IAAIL,MAAM,CAACK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKJ,MAAM,EAAE,OAAOI,CAAC;IACvC;IACA,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,CAACL,MAAM,EAAEC,MAAM,CAAC,CAAC;;EAEpB;EACA,MAAMM,UAAU,GAAGxB,WAAW,CAAC,MAAM;IACnCO,KAAK,CACFkB,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,qBAAsB,kBAAiBV,MAAO,EAAC,CAAC,CACnEW,IAAI,CAAEC,QAAQ,IAAK;MAClBV,UAAU,CAACU,QAAQ,CAACC,IAAI,CAAC;IAC3B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,CAACf,MAAM,CAAC,CAAC;;EAEZ;EACAnB,SAAS,CAAC,MAAM;IACd;IACAyB,UAAU,EAAE;IACZ;IACA,MAAMY,QAAQ,GAAGC,WAAW,CAACb,UAAU,EAAE,KAAK,CAAC;IAE/C,OAAO,MAAM;MACX;MACAc,aAAa,CAACF,QAAQ,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,CAAClB,MAAM,EAAEM,UAAU,CAAC,CAAC;EAExB,oBACEb,OAAA;IAAK4B,SAAS,EAAErC,aAAa,CAACsC,SAAU;IAAAC,QAAA,gBACtC9B,OAAA,CAACN,IAAI;MAACkC,SAAS,EAAErC,aAAa,CAACwC,IAAK;MAACC,EAAE,EAAC,GAAG;MAAAF,QAAA,eACzC9B,OAAA;QAAM4B,SAAS,EAAEtC,MAAM,CAAC2C,QAAS;QAAAH,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAO;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1C,eACPrC,OAAA;MAAI4B,SAAS,EAAC;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,EACrB,CAAC/B,MAAM,CAACM,MAAM;IAAA;IACb;IACA;IACAZ,OAAA;MAAK4B,SAAS,EAAErC,aAAa,CAAC+C,iBAAkB;MAAAR,QAAA,eAC9C9B,OAAA,CAACP,OAAO;QAACmC,SAAS,EAAC,QAAQ;QAACW,SAAS,EAAC;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC7C,GACJ3B,KAAK,IAAI,CAAC;IAAA;IACZ;IACAV,OAAA,CAAAE,SAAA;MAAA4B,QAAA,gBAEE9B,OAAA,CAACR,GAAG;QAACoC,SAAS,EAAEtC,MAAM,CAACiB,MAAM,GAAG,iCAAkC;QAAAuB,QAAA,EAC/DvB;MAAM;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACH,eAENrC,OAAA,CAACR,GAAG;QACFoC,SAAS,EAAEtC,MAAM,CAACkD,KAAK,GAAG,iCAAkC;QAC5DC,KAAK,EAAE;UACLC,KAAK,EAAEpC,MAAM,CAACI,KAAK,CAAC,CAAC,CAAC;QACxB,CAAE;QAAAoB,QAAA,EAEDpB,KAAK,KAAK,CAAC,CAAC,GAAGJ,MAAM,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC,CAACiC,OAAO,CAAC,CAAC,CAAC,GAAG;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC5C,eAENrC,OAAA,CAACR,GAAG;QAACoC,SAAS,EAAC,SAAS;QAAAE,QAAA,eACtB9B,OAAA,CAACH,KAAK;UACJ+C,OAAO,EAAE9C,aAAc;UACvB+C,MAAM,EAAE,CACN;YACEC,IAAI,EAAEvC,MAAM;YACZa,IAAI,EAAEZ;UACR,CAAC,CACD;UACFuC,IAAI,EAAC,MAAM;UACXC,MAAM,EAAE,GAAI;UACZC,KAAK,EAAE;QAAI;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACX;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE;IAAA,gBACL;IAAA;IAEH;IACArC,OAAA;MAAA8B,QAAA,EAAK;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV,CAAC;AAAChC,EAAA,CAxFIF,OAAO;EAAA,QAEQR,SAAS;AAAA;AAAAuD,EAAA,GAFxB/C,OAAO;AA0Fb,eAAeA,OAAO;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}