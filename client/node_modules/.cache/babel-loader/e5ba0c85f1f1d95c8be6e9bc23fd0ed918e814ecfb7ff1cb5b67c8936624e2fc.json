{"ast":null,"code":"var _jsxFileName = \"/Users/maxyuan/Documents/simple-robinhood/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./App.module.css\";\nimport Home from \"./pages/Home\";\nimport History from \"./pages/History\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // List of stock prices\n  const [stocks, setStocks] = useState([]);\n  // List of stock tickers\n  const [tickers, setTickers] = useState([]);\n  // On page render....\n  useEffect(() => {\n    // Fetch list of tickers if we haven't already\n    if (!tickers.length) {\n      axios.get(`${process.env.REACT_APP_BACKEND_URL}tickers`).then(response => {\n        setTickers(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }, []);\n  useEffect(() => {\n    // Fetch stock prices every second\n    const interval = setInterval(() => {\n      if (!tickers.length) return;\n      console.log(\"kek\");\n      axios.post(`${process.env.REACT_APP_BACKEND_URL}stocks`, {\n        tickers: tickers\n      }).then(response => {\n        // console.log(response.data);\n\n        // initialize list for new stock prices\n        let new_stocks = [...response.data];\n        // get color for each ticker by comparing new price with old price\n        new_stocks.forEach((stock, index) => {\n          stock.push(stocks.length === 0 || stock[1] > stocks[index][1] ? \"green\" : \"red\");\n        });\n        setStocks(new_stocks);\n      }).catch(error => {\n        console.log(error);\n      });\n    }, 1000);\n    return () => {\n      // Stop fetching if page is unmounted\n      clearInterval(interval);\n    };\n  }, [tickers]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/history/:ticker\",\n          render: props => /*#__PURE__*/_jsxDEV(History, {\n            ...props,\n            stocks: stocks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Home, {\n            stocks: stocks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DdT2Ze2GD4JGpc5ydN/hjvrWPbY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Route","Switch","styles","Home","History","axios","jsxDEV","_jsxDEV","App","_s","stocks","setStocks","tickers","setTickers","length","get","process","env","REACT_APP_BACKEND_URL","then","response","data","catch","error","console","log","interval","setInterval","post","new_stocks","forEach","stock","index","push","clearInterval","className","container","children","path","render","props","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maxyuan/Documents/simple-robinhood/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./App.module.css\";\nimport Home from \"./pages/Home\";\nimport History from \"./pages/History\";\nimport axios from \"axios\";\n\nfunction App() {\n  // List of stock prices\n  const [stocks, setStocks] = useState([]);\n  // List of stock tickers\n  const [tickers, setTickers] = useState([]);\n  // On page render....\n  useEffect(() => {\n    // Fetch list of tickers if we haven't already\n    if (!tickers.length) {\n      axios\n        .get(`${process.env.REACT_APP_BACKEND_URL}tickers`)\n        .then((response) => {\n          setTickers(response.data);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  }, []);\n\n  useEffect(() => {\n    // Fetch stock prices every second\n    const interval = setInterval(() => {\n      if (!tickers.length) return;\n      console.log(\"kek\");\n      axios\n        .post(`${process.env.REACT_APP_BACKEND_URL}stocks`, {\n          tickers: tickers,\n        })\n        .then((response) => {\n          // console.log(response.data);\n\n          // initialize list for new stock prices\n          let new_stocks = [...response.data];\n          // get color for each ticker by comparing new price with old price\n          new_stocks.forEach((stock, index) => {\n            stock.push(\n              stocks.length === 0 || stock[1] > stocks[index][1]\n                ? \"green\"\n                : \"red\"\n            );\n          });\n          setStocks(new_stocks);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }, 1000);\n\n    return () => {\n      // Stop fetching if page is unmounted\n      clearInterval(interval);\n    };\n  }, [tickers]);\n\n  return (\n    <div className={styles.container}>\n      <Router>\n        <Switch>\n          {/* Path to view a stock's history */}\n          <Route\n            path=\"/history/:ticker\"\n            render={(props) => <History {...props} stocks={stocks} />}\n          />\n          {/* Path to view home page with all stocks */}\n          <Route path=\"/\">\n            <Home stocks={stocks} />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}